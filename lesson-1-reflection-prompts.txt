How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlighted the lines that were different so we only had to analyze those

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You'll be able to easily correct errors/detect bugs between versions.
    It would also help a lot with seeing how something was developed so the blocks are clear

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: you don't end up with useless or redundant saves and can specify a clear purpose for each version
    Cons: if you forget to save or don't save with consistent intervals (i.e. once per logic change) it will be overwhelming/not helpful

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed to be used with code and files that are typically linked or have common connections.
    That isn't necessary with google docs since it mostly houses independent documents

How can you use the commands git log and git diff to view the history of files?

    git log allows you to see the list of versions with their commments
    git diff allows you to compare two versions to get their differences.  It shows lines that were added or removed/modified

How might using version control make you more confident to make changes that
could break something?

    You know if you do something wrong you can always go back to a previous version that works and don't have to worry about losing all of your working program

Now that you have your workspace set up, what do you want to try using Git for?

    Managing versions of programs in developing apps and various other softwares
